java
import java.util.​ArrayList;
import java.util.​HashMap;

public class PhoneBook {
private HashMap> contacts;

public PhoneBook {
contacts new HashMap<>;
}
// Метод для добавления нового контакта в телефонную книгу
public void addContact(String name, String phoneNumber) {
if (contacts.​containsKey(name)) {
// Если контакт уже существует, добавляем новый номер телефона в существующий список
contacts.​get(name).​add(phoneNumber);
} else {
// Если контакт не существует, создаем новый список номеров телефонов и добавляем его в HashMap
ArrayList phoneList new ArrayList<>;
phoneList.​add(phoneNumber);
contacts.​put(name, phoneList);
}
}

// Метод для вывода всех контактов в телефонной книге
public void printContacts {
for (String name ⁚ contacts.keySet) {
System.​out.​println(name ″⁚ ″ contacts.​get(name));
}
}

// Метод для вывода всех контактов в телефонной книге без сортировки
public void printContactsUnsorted {
for (String name ⁚ contacts.​keySet) {
System.​out.​println(name ″⁚ ″ contacts.​get(name));
}
}

// Метод для сортировки контактов по убыванию числа телефонов
public void sortByPhoneNumber {
ArrayList sortedNames new ArrayList<>(contacts.​keySet);

// Сортируем список имен контактов по убыванию числа телефонов
sortedNames.​sort((name1, name2) -> {
int phoneCount1 contacts.get(name1).size;
int phoneCount2 contacts.​get(name2).​size;
return phoneCount2 ‒ phoneCount1;
});
for (String name ⁚ sortedNames) {
System.out.​println(name ″⁚ ″ contacts.get(name));
}
}

public static void main(String[] args) {
PhoneBook phoneBook new PhoneBook;

// Добавляем несколько контактов с разными номерами телефонов
phoneBook.​addContact(″Иван″, ″111-111″);
phoneBook.​addContact(″Петр″, ″222-222″);
phoneBook.addContact(″Иван″, ″333-333″);
phoneBook.​addContact(″Сергей″, ″444-444″);
phoneBook.​addContact(″Иван″, ″555-555″);